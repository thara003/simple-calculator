{"version":3,"sources":["components/Header.js","components/Screen.js","components/Wrapper.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Screen","props","display","Wrapper","useState","screen","setScreen","displayChange","e","expression","push","target","value","console","log","type","style","backgroundColor","onClick","preventDefault","length","pop","result","index","evalexp","parseFloat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KAUeA,EARA,WACX,OACI,wBAAQC,UAAU,SAAlB,SACI,sD,OCSGC,EAXA,SAACC,GAEZ,OACI,qBAAKF,UAAY,SAAjB,SACI,6BAAKE,EAAMC,aCoPRC,EAvPC,SAACF,GACf,MAA4BG,mBAAS,CAAEF,QAAS,KAAhD,mBAAOG,EAAP,KAAeC,EAAf,KAGMC,EAAgB,SAACC,GACrBP,EAAMQ,WAAWC,KAAKF,EAAEG,OAAOC,OAC/BN,EAAU,CAAEJ,QAASD,EAAMQ,aAC3BI,QAAQC,IAAIb,EAAMQ,aA2FpB,OACE,sBAAKV,UAAU,UAAf,UACE,cAAC,EAAD,CAAQG,QAASG,EAAOH,UACxB,sBAAKH,UAAU,SAAf,UACE,uBACEgB,KAAK,SACLH,MAAO,KACPI,MAAO,CAAEC,gBAAiB,oBAC1BlB,UAAU,SACVmB,QA1Fa,SAACV,GACpBA,EAAEW,iBACAlB,EAAMQ,WAAWW,OAAS,EAC1Bd,EAAU,CAAEJ,QAASD,EAAMQ,aAC3BI,QAAQC,IAAI,cAwFV,uBACEC,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAxGa,SAACV,GACpBA,EAAEW,iBACFlB,EAAMQ,WAAWY,MACjBf,EAAU,CAAEJ,QAASD,EAAMQ,aAC3BI,QAAQC,IAAIb,EAAMQ,eAsGd,uBACEM,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,oBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,oBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,oBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,oBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,oBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,KACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,qBAC1BlB,UAAU,SACVmB,QAASX,IAEX,uBACEQ,KAAK,SACLH,MAAO,IACPI,MAAO,CAAEC,gBAAiB,oBAC1BlB,UAAU,SACVmB,QAvNmB,WACzB,IAAII,EAAS,EACbT,QAAQC,IAAI,aACZ,IAAK,IAAIS,EAAQ,EAAGA,EAAQtB,EAAMQ,WAAWW,OAAQG,IAErB,MAA5BtB,EAAMQ,WAAWc,IACW,MAA5BtB,EAAMQ,WAAWc,IACW,MAA5BtB,EAAMQ,WAAWc,IACW,MAA5BtB,EAAMQ,WAAWc,IACW,MAA5BtB,EAAMQ,WAAWc,IAKiB,MAAhCtB,EAAMQ,WAAWc,EAAQ,IACO,MAAhCtB,EAAMQ,WAAWc,EAAQ,IACO,MAAhCtB,EAAMQ,WAAWc,EAAQ,IACO,MAAhCtB,EAAMQ,WAAWc,EAAQ,IACO,MAAhCtB,EAAMQ,WAAWc,EAAQ,GAP3BtB,EAAMuB,QAAQd,KAAKT,EAAMQ,WAAWc,KAWlCtB,EAAMQ,WAAWc,EAAQ,GAAKtB,EAAMQ,WAAWc,EAAQ,GAAKtB,EAAMQ,WAAWc,GAC7EtB,EAAMuB,QAAQH,MACdpB,EAAMuB,QAAQd,KAAKT,EAAMQ,WAAWc,EAAQ,KAOlDV,QAAQC,IAAIb,EAAMuB,SAClB,IAAK,IAAID,EAAQ,EAAGA,EAAQtB,EAAMuB,QAAQJ,OAAQG,IACnB,MAAzBtB,EAAMuB,QAAQD,KAChBD,EAAUG,WAAWxB,EAAMuB,QAAQD,EAAM,IAAME,WAAWxB,EAAMuB,QAAQD,EAAM,IAC9EjB,EAAU,CAAEJ,QAASoB,IACrBrB,EAAMQ,WAAWW,OAAS,EAC1BnB,EAAMuB,QAAQJ,OAAS,GAGI,MAAzBnB,EAAMuB,QAAQD,KAChBD,EAAUG,WAAWxB,EAAMuB,QAAQD,EAAM,IAAME,WAAWxB,EAAMuB,QAAQD,EAAM,IAC9EjB,EAAU,CAAEJ,QAASoB,IACrBrB,EAAMQ,WAAWW,OAAS,EAC1BnB,EAAMuB,QAAQJ,OAAS,GAGE,MAAzBnB,EAAMuB,QAAQD,KAChBD,EAAUG,WAAWxB,EAAMuB,QAAQD,EAAM,IAAME,WAAWxB,EAAMuB,QAAQD,EAAM,IAC9EjB,EAAU,CAAEJ,QAASoB,IACrBrB,EAAMQ,WAAWW,OAAS,EAC1BnB,EAAMuB,QAAQJ,OAAS,GAGE,MAAzBnB,EAAMuB,QAAQD,KAChBD,EAAUG,WAAWxB,EAAMuB,QAAQD,EAAM,IAAME,WAAWxB,EAAMuB,QAAQD,EAAM,IAC9EjB,EAAU,CAAEJ,QAASoB,IACrBrB,EAAMQ,WAAWW,OAAS,EAC1BnB,EAAMuB,QAAQJ,OAAS,GAGE,MAAzBnB,EAAMuB,QAAQD,KAChBD,EAAUG,WAAWxB,EAAMuB,QAAQD,EAAM,IAAME,WAAWxB,EAAMuB,QAAQD,EAAM,IAC9EjB,EAAU,CAAEJ,QAASoB,IACrBrB,EAAMQ,WAAWW,OAAS,EAC1BnB,EAAMuB,QAAQJ,OAAS,aC3EVM,EAfH,WAIV,OACE,sBAAK3B,UAAY,YAAjB,UACE,cAAC,EAAD,IACE,cAAC,EAAD,CAASU,WANE,CAAC,IAMqBe,QALzB,CAAC,UCMFG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e1d15a54.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>Simple Calculator</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","// import { useState } from \"react\"\r\n\r\n\r\nconst Screen = (props) => {\r\n    // const [screen, setScreen] = useState(Screen.screen);\r\n    return (\r\n        <div className = 'screen'>\r\n            <h3>{props.display}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Screen\r\n\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Screen from \"./Screen\";\r\n\r\nconst Wrapper = (props) => {\r\n  const [screen, setScreen] = useState({ display: \"\" });\r\n  \r\n\r\n  const displayChange = (e) => {\r\n    props.expression.push(e.target.value);\r\n    setScreen({ display: props.expression });\r\n    console.log(props.expression);\r\n  };\r\n\r\n  const eraseDisplay = (e) => {\r\n    e.preventDefault();\r\n    props.expression.pop();\r\n    setScreen({ display: props.expression });\r\n    console.log(props.expression);\r\n  };\r\n\r\n  const clearDisplay = (e) => {\r\n    e.preventDefault();\r\n      props.expression.length = 0;\r\n      setScreen({ display: props.expression });\r\n      console.log(\"cleared\");\r\n    \r\n  };\r\n\r\n  const evaluateExpression = () => {\r\n    let result = 0;\r\n    console.log(\"evaluated\");\r\n    for (let index = 0; index < props.expression.length; index++) {\r\n      if (\r\n        props.expression[index] === \"+\" ||\r\n        props.expression[index] === \"-\" ||\r\n        props.expression[index] === \"/\" ||\r\n        props.expression[index] === \"x\" ||\r\n        props.expression[index] === \"%\"\r\n      ) {\r\n        props.evalexp.push(props.expression[index]);\r\n      } else {\r\n        if (\r\n          props.expression[index - 1] === \"+\" ||\r\n          props.expression[index - 1] === \"-\" ||\r\n          props.expression[index - 1] === \"/\" ||\r\n          props.expression[index - 1] === \"x\" ||\r\n          props.expression[index - 1] === \"%\"\r\n        ) {\r\n          props.evalexp.push(props.expression[index]);\r\n        } else {\r\n          props.expression[index - 1] = props.expression[index - 1] + props.expression[index];\r\n          props.evalexp.pop();\r\n          props.evalexp.push(props.expression[index - 1]);\r\n        }\r\n      }\r\n      \r\n\r\n  \r\n    }\r\n    console.log(props.evalexp);\r\n    for (let index = 0; index < props.evalexp.length; index++) {\r\n      if (props.evalexp[index] === \"+\") {\r\n        result =  parseFloat(props.evalexp[index-1]) + parseFloat(props.evalexp[index+1]);\r\n        setScreen({ display: result });\r\n        props.expression.length = 0;\r\n        props.evalexp.length = 0;\r\n        \r\n      }\r\n      if (props.evalexp[index] === \"-\") {\r\n        result =  parseFloat(props.evalexp[index-1]) - parseFloat(props.evalexp[index+1]);\r\n        setScreen({ display: result });\r\n        props.expression.length = 0;\r\n        props.evalexp.length = 0;\r\n      \r\n    }\r\n    if (props.evalexp[index] === \"x\") {\r\n      result =  parseFloat(props.evalexp[index-1]) * parseFloat(props.evalexp[index+1]);\r\n      setScreen({ display: result });\r\n      props.expression.length = 0;\r\n      props.evalexp.length = 0;\r\n    \r\n  }\r\n  if (props.evalexp[index] === \"/\") {\r\n    result =  parseFloat(props.evalexp[index-1]) / parseFloat(props.evalexp[index+1]);\r\n    setScreen({ display: result });\r\n    props.expression.length = 0;\r\n    props.evalexp.length = 0;\r\n  \r\n}\r\nif (props.evalexp[index] === \"%\") {\r\n  result =  parseFloat(props.evalexp[index-1]) % parseFloat(props.evalexp[index+1]);\r\n  setScreen({ display: result });\r\n  props.expression.length = 0;\r\n  props.evalexp.length = 0;\r\n\r\n}\r\n      \r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Screen display={screen.display}></Screen>\r\n      <div className=\"keypad\">\r\n        <input\r\n          type=\"button\"\r\n          value={\"AC\"}\r\n          style={{ backgroundColor: \"rgb(255, 00, 00)\" }}\r\n          className=\"button\"\r\n          onClick={clearDisplay}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"C\"}\r\n          style={{ backgroundColor: \"rgb(255, 250, 00)\" }}\r\n          className=\"button\"\r\n          onClick={eraseDisplay}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"%\"}\r\n          style={{ backgroundColor: \"rgb(47, 255, 99)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"/\"}\r\n          style={{ backgroundColor: \"rgb(47, 255, 99)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"7\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"8\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"9\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"x\"}\r\n          style={{ backgroundColor: \"rgb(47, 255, 99)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"4\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"5\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"6\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"+\"}\r\n          style={{ backgroundColor: \"rgb(47, 255, 99)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"1\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"2\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"3\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"-\"}\r\n          style={{ backgroundColor: \"rgb(47, 255, 99)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"00\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"0\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\".\"}\r\n          style={{ backgroundColor: \"rgb(158, 255, 47)\" }}\r\n          className=\"button\"\r\n          onClick={displayChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value={\"=\"}\r\n          style={{ backgroundColor: \"rgb(47, 255, 99)\" }}\r\n          className=\"button\"\r\n          onClick={evaluateExpression}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from 'react'\r\nimport Header from './components/Header'\r\nimport Wrapper from './components/Wrapper'\r\n\r\nconst App = () => {\r\n  let expression = [\"\"];\r\n  let evalexp = [\"\"];\r\n  // let number = \"\";\r\n  return (\r\n    <div className = 'container'>\r\n      <Header></Header>\r\n        <Wrapper expression={expression} evalexp = {evalexp}></Wrapper>\r\n\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}